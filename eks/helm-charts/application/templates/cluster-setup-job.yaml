apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-cluster-setup
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  template:
    spec:
      serviceAccountName: {{ .Release.Name }}-setup-sa
      restartPolicy: Never
      containers:
      - name: cluster-setup
        image: amazon/aws-cli:latest
        command:
        - /bin/bash
        - -c
        - |
          # Install kubectl
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          mv kubectl /usr/local/bin/
          
          # Setup aws-auth ConfigMap
          ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          NODE_GROUP_NAME=$(aws eks list-nodegroups --cluster-name my-eks-cluster --region us-east-1 --query 'nodegroups[0]' --output text)
          NODE_ROLE_ARN=$(aws eks describe-nodegroup --cluster-name my-eks-cluster --nodegroup-name $NODE_GROUP_NAME --region us-east-1 --query 'nodegroup.nodeRole' --output text)
          
          cat > aws-auth.yaml <<EOF
          apiVersion: v1
          kind: ConfigMap
          metadata:
            name: aws-auth
            namespace: kube-system
          data:
            mapRoles: |
              - rolearn: $NODE_ROLE_ARN
                username: system:node:{{EC2PrivateDNSName}}
                groups:
                  - system:bootstrappers
                  - system:nodes
            mapUsers: |
              - userarn: arn:aws:iam::$ACCOUNT_ID:root
                username: root
                groups:
                  - system:masters
          EOF
          
          kubectl apply -f aws-auth.yaml --server-side --force-conflicts
          
          # Create ECR pull secret
          kubectl create secret docker-registry aws-ecr-secret \
            --docker-server=$ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com \
            --docker-username=AWS \
            --docker-password=$(aws ecr get-login-password --region us-east-1) \
            --namespace=default \
            --dry-run=client -o yaml | kubectl apply -f -
        env:
        - name: AWS_DEFAULT_REGION
          value: us-east-1
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ .Release.Name }}-setup-sa
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-10"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    eks.amazonaws.com/role-arn: arn:aws:iam::{{ .Values.aws.accountId }}:role/external-secrets-role