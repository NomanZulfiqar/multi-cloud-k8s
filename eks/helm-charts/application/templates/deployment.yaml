apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  labels:
    app: {{ .Release.Name }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ .Release.Name }}-sa
      containers:
      - name: {{ .Release.Name }}
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - containerPort: 80
        env:
        # Database configuration from values
        - name: DB_HOST
          value: {{ .Values.env.database.host | quote }}
        - name: DB_PORT
          value: {{ .Values.env.database.port | quote }}
        - name: DB_NAME
          value: {{ .Values.env.database.name | quote }}
        # Redis configuration from values
        - name: REDIS_HOST
          value: {{ .Values.env.redis.host | quote }}
        - name: REDIS_PORT
          value: {{ .Values.env.redis.port | quote }}
        # Secrets from SecretProviderClass (single source of truth)
        - name: DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: {{ .Values.app.secretName }}
              key: username
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.app.secretName }}
              key: password
        volumeMounts:
        - name: secrets-store
          mountPath: "/mnt/secrets-store"
          readOnly: true
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
      volumes:
      - name: secrets-store
        csi:
          driver: secrets-store.csi.k8s.io
          readOnly: true
          volumeAttributes:
            secretProviderClass: {{ .Release.Name }}-secrets