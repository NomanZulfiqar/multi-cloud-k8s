name: EKS Complete Destroy Pipeline

on:
  workflow_dispatch:
    inputs:
      confirm_destroy:
        description: 'Type DESTROY to confirm'
        required: true
        default: 'NO'

env:
  AWS_REGION: us-east-1
  CLUSTER_NAME: my-eks-cluster

jobs:
  destroy-everything:
    name: Complete EKS Destruction
    runs-on: ubuntu-latest
    if: github.event.inputs.confirm_destroy == 'DESTROY'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Setup Helm
        uses: azure/setup-helm@v3
        with:
          version: 'v3.8.0'

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.0.0

      - name: Configure kubectl
        run: |
          if aws eks describe-cluster --name ${{ env.CLUSTER_NAME }} --region ${{ env.AWS_REGION }} &>/dev/null; then
            aws eks update-kubeconfig --name ${{ env.CLUSTER_NAME }} --region ${{ env.AWS_REGION }}
          fi

      - name: Destroy Applications
        run: |
          helm uninstall myapp --wait --timeout=5m || echo "Application not found"
          helm uninstall postgres --wait --timeout=5m || echo "Database not found"

      - name: Destroy Infrastructure
        run: |
          cd eks/terraform
          terraform init -upgrade
          terraform destroy -auto-approve

      - name: Verify Destruction
        run: |
          echo "ðŸŽ‰ EKS Infrastructure destroyed successfully"